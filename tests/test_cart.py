import unittest
from app.cart import cart  # Импортируем модуль cart из папки, которая содержит словарь cart.


class TestCart(unittest.TestCase):
    """
    Класс TestCart предназначен для тестирования функциональности корзины (cart).
    Он наследуется от unittest.TestCase, что позволяет использовать встроенные
    функции для создания и выполнения тестов.
    """

    def setUp(self):
        """
        Метод setUp вызывается перед каждым тестом.
        Здесь мы очищаем содержимое корзины (cart), чтобы каждый тест
        начинался с чистого состояния. Это помогает избежать
        взаимодействия между тестами и гарантирует их независимость.
        """
        cart.clear()  # Очистить словарь cart перед каждым тестом

    def test_cart_initialization(self):
        """
        Тест для проверки инициализации корзины.
        Проверяем, что cart является экземпляром dict
        и изначально пустой.
        """
        self.assertIsInstance(cart, dict)  # Проверка, что cart - это словарь
        self.assertEqual(cart, {})  # Проверка, что cart изначально пустой

    def test_add_item_to_cart(self):
        """
        Тест для добавления товара в корзину.
        Мы добавляем товар с идентификатором item_id и количеством item_quantity,
        а затем проверяем, что товар добавлен в корзину.
        """
        item_id = 1  # Идентификатор товара
        item_quantity = 2  # Количество товара
        cart[item_id] = item_quantity  # Добавляем товар в корзину
        self.assertIn(item_id, cart)  # Проверяем, что товар присутствует в корзине
        self.assertEqual(cart[item_id], item_quantity)  # Проверяем, что количество товара соответствует

    def test_remove_item_from_cart(self):
        """
        Тест для удаления товара из корзины.
        Сначала добавляем товар в корзину, затем удаляем его и
        проверяем, что он больше не присутствует в корзине.
        """
        item_id = 1  # Идентификатор товара
        item_quantity = 2  # Количество товара
        cart[item_id] = item_quantity  # Добавляем товар в корзину
        del cart[item_id]  # Удаляем товар из корзины
        self.assertNotIn(item_id, cart)  # Проверяем, что товар отсутствует в корзине

    def test_update_item_quantity_in_cart(self):
        """
        Тест для обновления количества товара в корзине.
        Мы сначала добавляем товар в корзину, затем обновляем его количество
        и проверяем, что новое количество правильно сохранено.
        """
        item_id = 1  # Идентификатор товара
        item_quantity = 2  # Идентификатор товара
        new_quantity = 3  # Новое количество товара
        cart[item_id] = item_quantity  # Добавляем товар в корзину
        cart[item_id] = new_quantity  # Обновляем количество товара
        self.assertEqual(cart[item_id], new_quantity)  # Проверяем, что новое количество товара сохранено


if __name__ == '__main__':
    unittest.main()  # Запускаем тесты, если этот файл выполняется как основная программа